---
- include: install.yml
  tags: [influxdb-data, install]

- include: configure.yml
  tags: [influxdb-data, configure]

- name: Start the influxdb-data service
  service:
    name: influxdb
    state: restarted
    enabled: yes
  register: influxdb_data_started
  when: influxdb_data_start_service

- name: Wait for influxdb-data to come up
  wait_for:
    host: "{{ influxdb_data_http_bind_address_hostname | default(\"localhost\", true) }}"
    port: "{{ influxdb_data_http_bind_address_port }}"
    delay: 1
    timeout: 5
  when: influxdb_data_started.changed and influxdb_data_start_service
  ignore_errors: yes
  register: influxdb_data_start_attempt

- name: Run tail on log
  command: tail /var/log/influxdb/influxd.log
  register: influxdb_data_tail_output
  when: influxdb_data_start_attempt.failed is defined and influxdb_data_start_attempt.failed == True

- name: Show log output
  debug:
    msg: "{{ influxdb_data_tail_output.stdout_lines }}"
  when: influxdb_data_start_attempt.failed is defined and influxdb_data_start_attempt.failed == True

- name: Assert status of influxdb-data service
  assert:
    that:
      - "influxdb_data_start_attempt == 0"
  when: influxdb_data_started.changed and influxdb_data_start_service and influxdb_data_start_attempt.failed is defined and influxdb_data_start_attempt.failed == True

- name: Capture current cluster status
  uri:
    url: http://localhost:8091/show-cluster
  register: influxdb_data_show_cluster

# TODO - not make port 8088 hard-coded
- name: Add data nodes to cluster (run from first meta node)
  command: influxd-ctl add-data {{ item }}:8088
  when: item not in influxdb_data_show_cluster['json']['data']|default([], true)
  with_items: "{{ groups.data }}"
  delegate_to: "{{ groups.meta[0] }}"
